'use strict';define(['./util'],function(a){'use strict';function b(){return!0}function c(){return!1}var d='anonymousRead';class e{constructor(f,g){this.view=f,this.manager=g,this._revision=null}get content(){return this.view.$content}get creationDate(){return new Date(this.view.$creationDate)}get flavors(){return this.content.flavors}get flavorNumber(){return Object.keys(this.content.flavors).length}get id(){return this.view._id}get modificationDate(){return new Date(this.view.$modificationDate)}get owner(){return this.view.$owners[0]}get owners(){return this.view.$owners.slice(1).filter(a.isEmail)}get revid(){return this.view._rev}get size(){var f=0,g=this.view._attachments;if(g)for(var h in g)f+=g[h].length||0.75*g[h].data.length;return f}get title(){return this.content.title||''}get keywords(){return this.content.keywords||[]}get icon(){return this.content.icon}get name(){return this.content.name}get category(){return this.content.category}get version(){return this.content.version||'0.0.0'}get public(){return-1!==this.view.$owners.indexOf(d)}getPath(f){var g=this.flavors[f].slice(0,-1);return'/'+g.join('/')}hasFlavor(f){return!!this.flavors[f]}hasView(){return this.view._attachments&&this.view._attachments['view.json']}hasData(){return this.view._attachments&&this.view._attachments['data.json']}getViewUrl(){var f=this._revision?`?rev=${this._revision}`:'';return this.hasView()?`${this.manager.rocDbUrl}/entry/${this.id}/view.json${f}`:null}getDataUrl(){var f=this._revision?`?rev=${this._revision}`:'';return this.hasData()?`${this.manager.rocDbUrl}/entry/${this.id}/data.json${f}`:null}getViewSwitcher(){return{view:{url:this.getViewUrl()},data:{url:this.getDataUrl()}}}moveTo(f){var g=f.data.path,h=g[0],i=this.flavors[h],j=i[i.length-1];return this.flavors[h]=g.slice(1).concat(j),this.save().then(b,c)}save(){var f=(g)=>{return this.view._id=g.body.id,this.reload().catch(()=>{this.view._rev=g.body.rev,this.view.$modificationDate=g.body.$modificationDate,this.view.$creationDate=g.body.$creationDate})};return this.id?this.manager.putRequestDB(`/entry/${this.id}`,this.view).then(f):this.manager.postRequestDB('/entry/',this.view).then(f)}saveView(f){var i,g=this.title,h=this.version;return this.hasView()&&(i=this.view._attachments['view.json']),this.content.title=f.title,this.content.version=f.version,this.content.keywords=f.keywords,this.content.icon=f.icon,this.content.name=f.name,this.content.category=f.category,this.view._attachments||(this.view._attachments={}),this.view._attachments['view.json']=f.attachment,this.save().then(b,()=>{return this.content.title=g,this.content.version=h,i&&(this.view._attachments['view.json']=i),!1})}remove(){var f=this.view.$deleted;return this.view.$deleted=!0,this.save().then(b,()=>{return'boolean'==typeof f&&(this.view.$deleted=f),!1})}getName(f){var g=this.flavors[f];return g[g.length-1]}rename(f,g){var h=this.flavors[f],i=h[h.length-1];return h[h.length-1]=g,this.save().then(b,function(){return h[h.length-1]=i,!1})}toggleFlavor(f,g){if(this.flavors[f]){if(1===this.flavorNumber)return Promise.resolve({state:'err-one'});var h=this.flavors[f];return delete this.flavors[f],this.save().then(()=>({state:'removed'}),()=>{return this.flavors[f]=h,!1})}var i=this.flavors[g][this.flavors[g].length-1];return this.flavors[f]=[i],this.save().then(()=>({state:'added',name:i}),()=>{return delete this.flavors[f],!1})}addGroup(f){return this.manager.putRequestDB(`/entry/${this.id}/_owner/${f}`).then(()=>this.reload()).then(b,c)}removeGroup(f){return this.manager.deleteRequestDB(`/entry/${this.id}/_owner/${f}`).then(()=>this.reload()).then(b,c)}reload(){return this.manager.getRequestDB(`/entry/${this.id}`).then((f)=>this.view=f.body)}togglePublic(){return-1===this.view.$owners.indexOf(d)?this.addGroup(d):this.removeGroup(d)}getRevisions(f){return this._revs&&!f?this._revs:(this._revs=this.manager.getRequestDB(`/entry/${this.id}`,{revs_info:!0}).then((g)=>g.body._revs_info.filter((h)=>'available'===h.status).map((h)=>h.rev)),this._revs)}setRevision(f){this._revision=f}getRevisionData(f){return this.manager.getRequestDB(`/entry/${this.id}?rev=${f}`).then((g)=>g.body)}}return e});
