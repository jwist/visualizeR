'use strict';define(['modules/default/defaultcontroller','lodash'],function(a,b){'use strict';function c(){}var d;return $.extend(!0,c.prototype,a),c.prototype.moduleInformation={name:'Panzoom',description:'Panzoom',author:'Daniel Kostro',date:'15.06.2014',license:'MIT',cssClass:'panzoom'},c.prototype.references={picture:{type:['picture','png','jpeg','jpg','gif','svg','string'],label:'A picture (image url or typed svg)'},svg:{label:'An svg'},image:{type:['picture','png','jpeg','jpg','gif','string'],label:'An image url'},pixel:{label:'A pixel'},allpixel:{label:'A hash map of pixels by varname'},transform:{label:'A transform matrix (as a 6-element array)',type:'array'}},c.prototype.events={click:{label:'The image was clicked',refVariable:['pixel','allpixel'],refAction:['pixel']},hover:{label:'A pixel was hovered',refVariable:['pixel','allpixel'],refAction:['pixel']},transformChanged:{label:'The image pan or zoom changed',refVariable:['transform'],refAction:['transform']}},c.prototype.variablesIn=['picture','image','svg'],c.prototype.actionsIn=$.extend({},a.actionsIn,{hide:'Hide an image',show:'Show an image',transform:'Set image transform'}),c.prototype.configurationStructure=function(){var e=[],f=this.module.definition.vars_in;if(f)for(var g=0,h=f.length;g<h;g++)e.push({title:f[g].name,key:f[g].name});return{groups:{group:{options:{type:'list'},fields:{highlightStrategy:{type:'combo',title:'Highlight behavior',options:[{title:'No highlights',key:'none'},{title:'Pan to center',key:'pan'},{title:'Pan to center and zoom',key:'panzoom'}],default:'none'},transformThrottling:{type:'float',title:'Throttle send transform',default:0}}},img:{options:{type:'table',multiple:!0},fields:{variable:{type:'combo',title:'Variable In',options:e,default:''},opacity:{type:'text',title:'Opacity [0,1]',default:'1'},order:{type:'text',title:'z-index',default:''},rendering:{type:'combo',title:'Rendering',options:[{key:'default',title:'Normal'},{key:'crisp-edges',title:'Crisp edges / Pixelated'}],default:'default'},scaling:{type:'combo',title:'Scaling Method',options:[{key:'max',title:'Extend to 100% of available space'},{key:'no',title:'Keep original image size'},{key:'maxIfLarge',title:'Normal if picture smaller than available space, 100% if not'}],default:'max'},rerender:{type:'checkbox',title:'Re-render on zoom',options:{yes:'Yes'},default:[]}}}}}},c.prototype.configAliases={img:['groups','img',0],highlightStrategy:['groups','group',0,'highlightStrategy',0],transformThrottling:['groups','group',0,'transformThrottling',0]},c.prototype.clickedPixel=function(e){this.createDataFromEvent('click','pixel',e)},c.prototype.allClickedPixels=function(e){this.createDataFromEvent('click','allpixel',e)},c.prototype.hoverPixel=function(e){this.createDataFromEvent('hover','pixel',e)},c.prototype.allHoverPixels=function(e){this.lastHoverPixels=e,this.createDataFromEvent('hover','allpixel',e)},c.prototype.transformChanged=function(e){e=e.slice(0,6),d(this,e)},c.prototype.setTransformThrottling=function(e){d=0<e?b.throttle(transformMatrix,e):transformMatrix},c.prototype.export=function(){return this.module.view.export()},c});function transformMatrix(a,b){a.createDataFromEvent('transformChanged','transform',b),a.sendActionFromEvent('transformChanged','transform',b)}
